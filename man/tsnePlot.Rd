% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_dlfoo2_PlotWrap.R
\name{tsnePlot}
\alias{tsnePlot}
\alias{tsnePlotTax}
\title{function tsnePlot}
\usage{
tsnePlot(
  tSNEres,
  pdata = NULL,
  annotation.column = "taxonomy_published",
  my_samples = NULL,
  plot.title = "",
  perplex = NULL,
  my.size = 2,
  my.alpha = 0.7,
  my.stroke = 0.05,
  my.stroke.color = "gray10",
  color.key.annotation = dlfoo2::color_subtypes,
  do.gradient = T,
  palette.gradient = rev(dlfoo2::palette_gradients[["red2white2blue"]]),
  gadient.na.col = NA,
  gradient.normalize = F,
  gradient.squish.probs = c(0.05, 0.95),
  showGuide = T,
  coord.fixed = T,
  shape.key = dlfoo2::shape_subtypes,
  zoom.coord = NULL
)
}
\arguments{
\item{tSNEres}{results list (tSNEres) from run.tsne-analysis}

\item{pdata}{defaults to pdata_panCanGex}

\item{annotation.column}{should be a column in the pdata object to for annotation.}

\item{plot.title}{Title of plot}

\item{perplex}{what perplexity to use. if null then plott all perplexes available in results table}

\item{my.size}{point size}

\item{my.alpha}{point alpha}

\item{my.stroke}{stroke width}

\item{my.stroke.color}{stroke line colors}

\item{do.gradient}{set to FALSE if to manually override numeric check for gradient or manual fil}

\item{gradient.squish.probs}{if to cap squish gradient to remove effects on color scale of outliers. vector of tow percent values. Uses quantile-probs. Defaults to c(0.05, 0.95),i.e. cap scale at 5 and 95 of values}

\item{showGuide}{if to show guide}

\item{coord.fixed}{if coord_fixed ggplot param}

\item{shape.key}{if to plot annotations in different shapes (connected to annotation)}

\item{zoom.coord}{list of x and y coordinates to specify/zoom plot coordinates}

\item{my.samples}{if to highligt samples - character vector of sample names}

\item{color_key}{what color key to use for annotation. Detaults to dlfoo2::color_subtypes (but could be set to e.g. dlfoo2::color_annotations)}

\item{color.key.gradient}{what gradient.}

\item{gradient.nomalize}{TRUE or FALSE if to z normalize annotation value (x-mean(x)) sd(x)}
}
\value{
a ggplot object
}
\description{
Plots RCC and BLCA taxonomy annotations
}
\seealso{
Other tsne: 
\code{\link{plotViolinScatterRankBarGeneric}()},
\code{\link{scatterPoint_annotationPlot_SHINY}()},
\code{\link{scatterPoint_annotationPlot}()},
\code{\link{tsne2df}()},
\code{\link{tsneGex}()},
\code{\link{tsneMe}()},
\code{\link{tsneShinyTaxEvaluation}()}

Other PlotWrap: 
\code{\link{chordPlot_ccHCA_to_reTax}()},
\code{\link{circosPlot_cc_hca_tree}()},
\code{\link{enrichmentCoocPlotrWrap}()},
\code{\link{fgseaCoocPlotrWrap}()},
\code{\link{genomeCircleSegments_legacy}()},
\code{\link{genomeCircleSegments}()},
\code{\link{heatmapAnnotations}()},
\code{\link{heatmapGeomRaster}()},
\code{\link{limmaGeneCoOcPlot}()},
\code{\link{meHeatmapRCC}()},
\code{\link{plotViolinScatterRankBarGeneric}()},
\code{\link{scatterPoint_annotationPlot_SHINY}()},
\code{\link{scatterPoint_annotationPlot}()},
\code{\link{segmentPlotter}()},
\code{\link{tsneShinyIndivSampleEvaluation}()},
\code{\link{tsneShinyTaxEvaluation}()}
}
\concept{PlotWrap}
\concept{tsne}
